// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/davidkroell/edurouter (interfaces: TransportLayerHandler)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	edurouter "github.com/davidkroell/edurouter"
	gomock "github.com/golang/mock/gomock"
)

// MockTransportLayerHandler is a mock of TransportLayerHandler interface.
type MockTransportLayerHandler struct {
	ctrl     *gomock.Controller
	recorder *MockTransportLayerHandlerMockRecorder
}

// MockTransportLayerHandlerMockRecorder is the mock recorder for MockTransportLayerHandler.
type MockTransportLayerHandlerMockRecorder struct {
	mock *MockTransportLayerHandler
}

// NewMockTransportLayerHandler creates a new mock instance.
func NewMockTransportLayerHandler(ctrl *gomock.Controller) *MockTransportLayerHandler {
	mock := &MockTransportLayerHandler{ctrl: ctrl}
	mock.recorder = &MockTransportLayerHandlerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTransportLayerHandler) EXPECT() *MockTransportLayerHandlerMockRecorder {
	return m.recorder
}

// Handle mocks base method.
func (m *MockTransportLayerHandler) Handle(arg0 *edurouter.IPv4Pdu) (*edurouter.IPv4Pdu, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Handle", arg0)
	ret0, _ := ret[0].(*edurouter.IPv4Pdu)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Handle indicates an expected call of Handle.
func (mr *MockTransportLayerHandlerMockRecorder) Handle(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockTransportLayerHandler)(nil).Handle), arg0)
}
